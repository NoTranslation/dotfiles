file:///home/zero/Documents/Mantas-code/Solution2.java {"mtime":1572907806712,"size":1903,"etag":"3459ei5hd1uc","orphaned":false}

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

class Solution2{

    public static class Tuple implements Comparable<Tuple>{
    
        private int num;
        private final char str;
        
        public Tuple(int x,char y){
            this.num = x;
            this.str = y;
        }
    
        @Override
        public int compareTo(Tuple arg0) {
            
            return Integer.compare(arg0.getNum(),this.getNum());
        }
        public int getNum(){
            return num;
        }
    
        public char getString(){
            return str;
        }

        public void setNum(int num){
            this.num = num;
        }
    }
    
    public static void main(String[] args) {
        
        System.out.println(letter(4,3,3));
        
       
        

    }

    public static String letter(int A,int B,int C){

        List<Tuple> list1 = new ArrayList<Tuple>(Arrays.asList(new Tuple(A, 'a'),new Tuple(B, 'b'),new Tuple(C, 'c')));
        
        System.out.println(String.format("%s: %d \n%s: %d \n%s: %d", list1.get(0).str,list1.get(0).num,
        list1.get(1).str,list1.get(1).num,
        list1.get(2).str,list1.get(2).num));
        
        
        String ans = "";
        for (int i = 0; i <= ans.length(); ++i){
            //could probs put this outside the loop and avoid the overhead, and it seems to work fine, but makes more sense inside the loop ¯\_(ツ)_/¯
            Collections.sort(list1);
            for (Tuple tuple : list1) {
                if(tuple.getNum() > 0 && (i < 2 || (tuple.getString() != ans.charAt(i-1) || tuple.getString() != ans.charAt(i-2)))){
                    ans += tuple.getString();
                    tuple.setNum(tuple.getNum()-1);
                    break;
                }
                
            }
        }
        return ans;
    }
}